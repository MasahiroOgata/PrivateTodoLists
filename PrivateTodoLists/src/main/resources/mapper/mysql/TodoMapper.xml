<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<!-- Mapperとxmlのマッピング -->
<mapper namespace="com.example.repository.TodoMapper">
	  
	<!-- ユーザー固有のTODOテーブルを作成
	<update id="createUserOwnTable">
		create table if not exists
			todo_items_user_${signupUserId}
		(
		id INT AUTO_INCREMENT NOT NULL,
		item_name VARCHAR(100) NOT NULL,
		registration_date DATE,
		expire_date DATE,
		finished_date DATE,
		is_deleted TINYINT NOT NULL DEFAULT 0,
		main_todo INT,
		create_date_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		update_date_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		PRIMARY KEY (id)
		)
	</update>
	
	 作成された固有テーブルの存在を確認 
	<select id="countUserOwnTable" resultType="Integer">
		select
		  count(*)
		from
		  information_schema.TABLES
		where
		  table_schema = 'private_todo' and
		  table_name = concat('todo_items_user_', #{signupUserId})	
	</select>
	 -->
	
	<!-- Todo複数件取得 -->
	<select id="findManyTodo" resultType="MTodo">
		select
			*
		from
			todo_items
		where
			user_id = #{userId}
			and is_deleted = 0
			<if test="search != null">
				and item_name like concat('%', #{search}, '%')
			</if>
		order
			by expire_date
	</select>
	
	<!-- Todo1件取得 -->
	<select id="findOneTodo" resultType="MTodo">
		select
			*
		from
			todo_items
		where
			id = #{id}
			and user_id = #{userId}
			and is_deleted = 0
	</select>
	
	<!-- Todo1件登録 -->
	<insert id="insertOneTodo" useGeneratedKeys="true" keyProperty="id">
		insert into
			todo_items
		(
			item_name,
			user_id,
			registration_date,
			expire_date,
			finished_date
		) values (
			#{itemName},
			#{userId},
			#{registrationDate},
			#{expireDate},
			#{finishedDate}
		)
	</insert>
	
	<!-- Todo1件更新 -->
	<update id="updateOneTodo">
		update
			todo_items
		set
			item_name = #{itemName},
			expire_date = #{expireDate},
			finished_date = #{finishedDate}
		where
			id = #{id}
			and user_id = #{userId}
	</update>
	
	<!-- Todo1件削除 -->
	<update id="setOneTodoDeleted">
		update
			todo_items
		set
			is_deleted = 1
		where
			id = #{id}
			and user_id = #{userId}
	</update>
	
	<!-- 未完了Todo件数取得 -->
	<select id="countUnfinishedTodo" resultType="int">
		select
			count(*)
		from
			todo_items
		where			
			user_id = #{userId}
			and is_deleted = 0
			and finished_date is null
	</select>
	
</mapper>